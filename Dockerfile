# Utilise une image Python r√©cente
FROM python:3.12-slim

# √âvite l'√©criture de fichiers .pyc et active le mode verbeux
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# D√©finit le r√©pertoire de travail
WORKDIR /app

# Installe git, ffmpeg et les libs n√©cessaires √† l'audio (PyNaCl)
RUN apt-get update && apt-get install -y \
    ffmpeg \
    git \
    libffi-dev \
    libsodium-dev \
    build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copie les fichiers de l'app (y compris tests/)
COPY . .

# Met √† jour pip et installe les d√©pendances runtime
RUN pip install --upgrade pip && \
    pip install "discord.py[voice] @ git+https://github.com/Rapptz/discord.py@master" && \
    pip install --no-cache-dir -r requirements.txt

# üîé D√©pendances de test + ex√©cution de pytest (fail-fast)
# On coupe tout ce qui pourrait d√©clencher du r√©seau/serveur web c√¥t√© tests
RUN pip install --no-cache-dir pytest pytest-asyncio && \
    YTDBG=0 YTDBG_HTTP_PROBE=0 DISABLE_WEB=1 \
    pytest -q tests/test_youtube_extractor.py

# Commande de d√©marrage du bot
CMD ["python", "main.py"]
